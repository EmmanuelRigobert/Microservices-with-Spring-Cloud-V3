spring.application.name=currency-conversion
#This is the URL of the Config Server. With help of the config client, we can connect to the config server
spring.config.import=optional:configserver:http://localhost:8888
#This allows the service to connect to the repo and get the limit-service properties file

server.port=8100

#The below command connects the currency-conversion service to the naming server. This may not be necessary as the eureka client dependency is already in the pom.xml file
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka

#Distributed tracing is used to trace the flow of requests in a microservices architecture in order to debug and monitor the flow of requests
#To launch Zipkin (Distributed tracing server), we can use the below command.
#docker run -d -p 9411:9411 openzipkin/zipkin:2.23
#url: http://localhost:9411/zipkin/
#Other services would connect to zipkin and sends information about the requests to zipkin
#While Sleuth only provides monitoring,we use Micrometer to connect our services to Zipkin which provides metrics, logs and distributed tracing
#Open telemetry is another tool used to send the info from microservices to Zipkin
#The below commands are used to configure sampling which is used to specify the percentage of requests to be traced. 1.0 means all requests would be traced. 0.5 means 50% of requests would be traced
management.tracing.sampling.probability=1.0
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#Docker Compose is a tool used to define and run multi-container Docker applications. With Compose, you use a YAML file to configure your application?s services. Then, with a single command, you create and start all the services from your configuration.

